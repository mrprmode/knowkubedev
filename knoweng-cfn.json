{
  "Resources": {
    "AWSAutoScalingAutoScalingGroupmasteruseast1amastersknowengk8slocal": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "master-us-east-1a.masters.knoweng.k8s.local",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationmasteruseast1amastersknowengk8slocal"
        },
        "MaxSize": 1,
        "MinSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subnetuseast1aknowengk8slocal"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "master-us-east-1a.masters.knoweng.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "master-us-east-1a",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ],
        "LoadBalancerNames": [
          {
            "Ref": "AWSElasticLoadBalancingLoadBalancerapiknowengk8slocal"
          }
        ]
      }
    },
    "AWSAutoScalingAutoScalingGroupnodesknowengk8slocal": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "nodes.knoweng.k8s.local",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationnodesknowengk8slocal"
        },
        "MaxSize": 1,
        "MinSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subnetuseast1aknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1bknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1cknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1dknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1eknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1fknowengk8slocal"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "nodes.knoweng.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "nodes",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/node",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ]
      }
    },
    "AWSAutoScalingAutoScalingGrouppipes1knowengk8slocal": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "pipes1.knoweng.k8s.local",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationpipes1knowengk8slocal"
        },
        "MaxSize": 1,
        "MinSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subnetuseast1aknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1bknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1cknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1dknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1eknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1fknowengk8slocal"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "pipes1.knoweng.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "pipes1",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/pipelines_jobs",
            "Value": "true",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/node",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ]
      }
    },
    "AWSAutoScalingAutoScalingGrouppipes2knowengk8slocal": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "pipes2.knoweng.k8s.local",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationpipes2knowengk8slocal"
        },
        "MaxSize": 5,
        "MinSize": 0,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subnetuseast1aknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1bknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1cknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1dknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1eknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1fknowengk8slocal"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "pipes2.knoweng.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "pipes2",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/pipelines_jobs",
            "Value": "true",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/node",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ]
      }
    },
    "AWSAutoScalingLaunchConfigurationmasteruseast1amastersknowengk8slocal": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 100,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilemastersknowengk8slocal"
        },
        "ImageId": "ami-0d9904e9e879910d6",
        "InstanceType": "c4.large",
        "KeyName": "kubernetes.knoweng.k8s.local-31:c1:90:09:71:1e:26:2b:d9:5e:cd:d9:87:92:c4:f0",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupmastersknowengk8slocal"
          }
        ],
        "UserData": "",
        "InstanceMonitoring": false
      }
    },
    "AWSAutoScalingLaunchConfigurationnodesknowengk8slocal": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 50,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilenodesknowengk8slocal"
        },
        "ImageId": "ami-0d9904e9e879910d6",
        "InstanceType": "c4.xlarge",
        "KeyName": "kubernetes.knoweng.k8s.local-31:c1:90:09:71:1e:26:2b:d9:5e:cd:d9:87:92:c4:f0",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupnodesknowengk8slocal"
          }
        ],
        "UserData": "",
        "InstanceMonitoring": false
      }
    },
    "AWSAutoScalingLaunchConfigurationpipes1knowengk8slocal": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 128,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilenodesknowengk8slocal"
        },
        "ImageId": "ami-0d9904e9e879910d6",
        "InstanceType": "c4.xlarge",
        "KeyName": "kubernetes.knoweng.k8s.local-31:c1:90:09:71:1e:26:2b:d9:5e:cd:d9:87:92:c4:f0",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupnodesknowengk8slocal"
          }
        ],
        "UserData": "",
        "InstanceMonitoring": false
      }
    },
    "AWSAutoScalingLaunchConfigurationpipes2knowengk8slocal": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 128,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilenodesknowengk8slocal"
        },
        "ImageId": "ami-0d9904e9e879910d6",
        "InstanceType": "c4.8xlarge",
        "KeyName": "kubernetes.knoweng.k8s.local-31:c1:90:09:71:1e:26:2b:d9:5e:cd:d9:87:92:c4:f0",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupnodesknowengk8slocal"
          }
        ],
        "UserData": "",
        "InstanceMonitoring": false
      }
    },
    "AWSEC2DHCPOptionsknowengk8slocal": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "ec2.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2InternetGatewayknowengk8slocal": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Route00000": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableknowengk8slocal"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "AWSEC2InternetGatewayknowengk8slocal"
        }
      }
    },
    "AWSEC2RouteTableknowengk8slocal": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCknowengk8slocal"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/kops/role",
            "Value": "public"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupEgressapielbegress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupapielbknowengk8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupEgressmasteregress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersknowengk8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupEgressnodeegress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesknowengk8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngressallmastertomaster": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersknowengk8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupmastersknowengk8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngressallmastertonode": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesknowengk8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupmastersknowengk8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngressallnodetonode": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesknowengk8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesknowengk8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngresshttpsapielb00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupapielbknowengk8slocal"
        },
        "FromPort": 443,
        "ToPort": 443,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngresshttpselbtomaster": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersknowengk8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupapielbknowengk8slocal"
        },
        "FromPort": 443,
        "ToPort": 443,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomastertcp12379": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersknowengk8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesknowengk8slocal"
        },
        "FromPort": 1,
        "ToPort": 2379,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomastertcp23824000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersknowengk8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesknowengk8slocal"
        },
        "FromPort": 2382,
        "ToPort": 4000,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomastertcp400365535": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersknowengk8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesknowengk8slocal"
        },
        "FromPort": 4003,
        "ToPort": 65535,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomasterudp165535": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersknowengk8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesknowengk8slocal"
        },
        "FromPort": 1,
        "ToPort": 65535,
        "IpProtocol": "udp"
      }
    },
    "AWSEC2SecurityGroupIngresssshexternaltomaster00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersknowengk8slocal"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngresssshexternaltonode00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesknowengk8slocal"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupapielbknowengk8slocal": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCknowengk8slocal"
        },
        "GroupDescription": "Security group for api ELB",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "api-elb.knoweng.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupmastersknowengk8slocal": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCknowengk8slocal"
        },
        "GroupDescription": "Security group for masters",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "masters.knoweng.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupnodesknowengk8slocal": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCknowengk8slocal"
        },
        "GroupDescription": "Security group for nodes",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "nodes.knoweng.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SubnetRouteTableAssociationuseast1aknowengk8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetuseast1aknowengk8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableknowengk8slocal"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationuseast1bknowengk8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetuseast1bknowengk8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableknowengk8slocal"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationuseast1cknowengk8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetuseast1cknowengk8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableknowengk8slocal"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationuseast1dknowengk8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetuseast1dknowengk8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableknowengk8slocal"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationuseast1eknowengk8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetuseast1eknowengk8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableknowengk8slocal"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationuseast1fknowengk8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetuseast1fknowengk8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableknowengk8slocal"
        }
      }
    },
    "AWSEC2Subnetuseast1aknowengk8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCknowengk8slocal"
        },
        "CidrBlock": "172.20.32.0/19",
        "AvailabilityZone": "us-east-1a",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "us-east-1a.knoweng.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subnetuseast1bknowengk8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCknowengk8slocal"
        },
        "CidrBlock": "172.20.64.0/19",
        "AvailabilityZone": "us-east-1b",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "us-east-1b.knoweng.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subnetuseast1cknowengk8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCknowengk8slocal"
        },
        "CidrBlock": "172.20.96.0/19",
        "AvailabilityZone": "us-east-1c",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "us-east-1c.knoweng.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subnetuseast1dknowengk8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCknowengk8slocal"
        },
        "CidrBlock": "172.20.128.0/19",
        "AvailabilityZone": "us-east-1d",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "us-east-1d.knoweng.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subnetuseast1eknowengk8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCknowengk8slocal"
        },
        "CidrBlock": "172.20.160.0/19",
        "AvailabilityZone": "us-east-1e",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "us-east-1e.knoweng.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subnetuseast1fknowengk8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCknowengk8slocal"
        },
        "CidrBlock": "172.20.192.0/19",
        "AvailabilityZone": "us-east-1f",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "us-east-1f.knoweng.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2VPCDHCPOptionsAssociationknowengk8slocal": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCknowengk8slocal"
        },
        "DhcpOptionsId": {
          "Ref": "AWSEC2DHCPOptionsknowengk8slocal"
        }
      }
    },
    "AWSEC2VPCGatewayAttachmentknowengk8slocal": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCknowengk8slocal"
        },
        "InternetGatewayId": {
          "Ref": "AWSEC2InternetGatewayknowengk8slocal"
        }
      }
    },
    "AWSEC2VPCknowengk8slocal": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.20.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumeaetcdeventsknowengk8slocal": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": false,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "a.etcd-events.knoweng.k8s.local"
          },
          {
            "Key": "k8s.io/etcd/events",
            "Value": "a/a"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumeaetcdmainknowengk8slocal": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": false,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "a.etcd-main.knoweng.k8s.local"
          },
          {
            "Key": "k8s.io/etcd/main",
            "Value": "a/a"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/knoweng.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSElasticLoadBalancingLoadBalancerapiknowengk8slocal": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "LoadBalancerName": "api-knoweng-k8s-local-c36n0v",
        "Listeners": [
          {
            "InstancePort": 443,
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": 443,
            "Protocol": "TCP"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupapielbknowengk8slocal"
          }
        ],
        "Subnets": [
          {
            "Ref": "AWSEC2Subnetuseast1dknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1eknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1fknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1aknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1bknowengk8slocal"
          },
          {
            "Ref": "AWSEC2Subnetuseast1cknowengk8slocal"
          }
        ],
        "HealthCheck": {
          "Target": "SSL:443",
          "HealthyThreshold": 2,
          "UnhealthyThreshold": 2,
          "Interval": 10,
          "Timeout": 5
        },
        "ConnectionSettings": {
          "IdleTimeout": 300
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "knoweng.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "api.knoweng.k8s.local"
          }
        ]
      }
    },
    "AWSIAMInstanceProfilemastersknowengk8slocal": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "AWSIAMRolemastersknowengk8slocal"
          }
        ]
      }
    },
    "AWSIAMInstanceProfilenodesknowengk8slocal": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "AWSIAMRolenodesknowengk8slocal"
          }
        ]
      }
    },
    "AWSIAMPolicyadditionalnodesknowengk8slocal": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "additional.nodes.knoweng.k8s.local",
        "Roles": [
          {
            "Ref": "AWSIAMRolenodesknowengk8slocal"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeTags",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "ec2:DescribeLaunchTemplateVersions"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMPolicymastersknowengk8slocal": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "masters.knoweng.k8s.local",
        "Roles": [
          {
            "Ref": "AWSIAMRolemastersknowengk8slocal"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeRegions",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVolumes"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DescribeVolumesModifications",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyVolume"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:AttachVolume",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
                "ec2:DeleteSecurityGroup",
                "ec2:DeleteVolume",
                "ec2:DetachVolume",
                "ec2:RevokeSecurityGroupIngress"
              ],
              "Condition": {
                "StringEquals": {
                  "ec2:ResourceTag/KubernetesCluster": "knoweng.k8s.local"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeTags"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "autoscaling:UpdateAutoScalingGroup"
              ],
              "Condition": {
                "StringEquals": {
                  "autoscaling:ResourceTag/KubernetesCluster": "knoweng.k8s.local"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:AttachLoadBalancerToSubnets",
                "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateLoadBalancerPolicy",
                "elasticloadbalancing:CreateLoadBalancerListeners",
                "elasticloadbalancing:ConfigureHealthCheck",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteLoadBalancerListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DetachLoadBalancerFromSubnets",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:DescribeVpcs",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancerPolicies",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "iam:ListServerCertificates",
                "iam:GetServerCertificate"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "s3:GetBucketLocation",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::knowengkops-state-store"
              ]
            },
            {
              "Action": [
                "s3:Get*"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::knowengkops-state-store/knoweng.k8s.local/*"
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetRepositoryPolicy",
                "ecr:DescribeRepositories",
                "ecr:ListImages",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMPolicynodesknowengk8slocal": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "nodes.knoweng.k8s.local",
        "Roles": [
          {
            "Ref": "AWSIAMRolenodesknowengk8slocal"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeRegions"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "s3:GetBucketLocation",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::knowengkops-state-store"
              ]
            },
            {
              "Action": [
                "s3:Get*"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::knowengkops-state-store/knoweng.k8s.local/addons/*",
                "arn:aws:s3:::knowengkops-state-store/knoweng.k8s.local/cluster.spec",
                "arn:aws:s3:::knowengkops-state-store/knoweng.k8s.local/config",
                "arn:aws:s3:::knowengkops-state-store/knoweng.k8s.local/instancegroup/*",
                "arn:aws:s3:::knowengkops-state-store/knoweng.k8s.local/pki/issued/*",
                "arn:aws:s3:::knowengkops-state-store/knoweng.k8s.local/pki/private/kube-proxy/*",
                "arn:aws:s3:::knowengkops-state-store/knoweng.k8s.local/pki/private/kubelet/*",
                "arn:aws:s3:::knowengkops-state-store/knoweng.k8s.local/pki/ssh/*",
                "arn:aws:s3:::knowengkops-state-store/knoweng.k8s.local/secrets/dockerconfig"
              ]
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetRepositoryPolicy",
                "ecr:DescribeRepositories",
                "ecr:ListImages",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMRolemastersknowengk8slocal": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "masters.knoweng.k8s.local",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMRolenodesknowengk8slocal": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "nodes.knoweng.k8s.local",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    }
  }
}
